import{_ as l,o as t,c as o,S as r}from"./chunks/framework.f62eb0f6.js";const c=JSON.parse('{"title":"程序员一年工作经验用十年？程序员如何摆脱学习效率低的毛病？","description":"","frontmatter":{"title":"程序员一年工作经验用十年？程序员如何摆脱学习效率低的毛病？"},"headers":[],"relativePath":"read/xuexixiaolvdi.md","filePath":"read/xuexixiaolvdi.md","lastUpdated":1695020935000}'),i={name:"read/xuexixiaolvdi.md"},a=r('<h1 id="程序员一年工作经验用十年-程序员如何摆脱学习效率低的毛病" tabindex="-1">程序员一年工作经验用十年？程序员如何摆脱学习效率低的毛病？ <a class="header-anchor" href="#程序员一年工作经验用十年-程序员如何摆脱学习效率低的毛病" aria-label="Permalink to &quot;程序员一年工作经验用十年？程序员如何摆脱学习效率低的毛病？&quot;">​</a></h1><h2 id="学习博客" tabindex="-1">学习博客 <a class="header-anchor" href="#学习博客" aria-label="Permalink to &quot;学习博客&quot;">​</a></h2><ul><li><a href="https://m.sohu.com/a/307701097_100171596" target="_blank" rel="noreferrer">程序员一年工作经验用十年？程序员如何摆脱学习效率低的毛病？</a></li></ul><h2 id="一些学习的坏习惯" tabindex="-1">一些学习的坏习惯 <a class="header-anchor" href="#一些学习的坏习惯" aria-label="Permalink to &quot;一些学习的坏习惯&quot;">​</a></h2><ul><li><p><strong>被动反复阅读</strong></p></li><li><p><strong>喜欢在书上划重点</strong></p></li><li><p><strong>看书中代码示例认为自己就理解了，从不动手编程</strong></p><ul><li>这是新手学编程的大忌，不去动手写，不去跟编译器和开发环境做斗争，你永远不知道软件开发过程中的操蛋事情。</li></ul></li><li><p><strong>拖延</strong></p><ul><li>这个问题最大，也是影响N多人不去学习的理由。解决的办法只有一个，马上去做！一旦你开始去做了，你的大脑就不会排斥了。 你的计划再完美，你选的书籍再经典，你挑的视频水平再高，如果你不马上去看，去学，去动手实践，那永远也只是停留在空想的阶段。 成功学习的典范就是成功战胜拖延症的典范。</li></ul></li><li><p><strong>学习任何东西，只停留在编写「Hello World」的水平</strong></p><ul><li>这个是什么意思呢？不是说你真的只会写「Hello World」，而是说要跳出自己的舒适区，去尝试一些自己不了解的领域，去做一些超过自己能力范围的事情 。</li></ul></li><li><p><strong>天天熬夜打王者和LOL，睡眠严重不足</strong></p></li><li><p><strong>工作中遇到模糊的问题不搞清楚，停留在面向 Google 编程</strong></p></li><li><p><strong>看几分钟书，敲几行代码就开始刷知乎和朋友圈</strong></p><p>做事情不专注，注意力不能集中，这也是学习的大忌。可以利用番茄工作法，给自己一段时间专注于某件事情，这样可以极大地提高 自己的工作效率。</p></li></ul><h2 id="一些学习的好习惯" tabindex="-1">一些学习的好习惯 <a class="header-anchor" href="#一些学习的好习惯" aria-label="Permalink to &quot;一些学习的好习惯&quot;">​</a></h2><ul><li><p><strong>与其反复阅读，不如经常回顾</strong></p></li><li><p><strong>多做练习，多写代码，从错误中学习</strong></p></li><li><p><strong>多总结问题的解决方案，多写可复用的代码，拒绝复制粘贴</strong></p></li><li><p><strong>对于自己想要学习的内容，制订一下计划，有节奏地学习</strong></p></li><li><p><strong>尝试使用不同的方式来解决一个问题</strong></p></li><li><p><strong>注意劳逸结合</strong></p></li><li><p><strong>向别人解释你的知识，多与人讨论</strong></p></li><li><p><strong>保持学习的专注</strong></p></li><li><p><strong>找到自己的短板并补足自己的短板</strong></p></li></ul>',7),e=[a];function n(s,p,g,d,u,h){return t(),o("div",null,e)}const x=l(i,[["render",n]]);export{c as __pageData,x as default};
