import{_ as i,o as a,c as l,S as e}from"./chunks/framework.f62eb0f6.js";const m=JSON.parse('{"title":"怎样才算一个计算机知识体系完整的毕业生？","description":"","frontmatter":{"title":"怎样才算一个计算机知识体系完整的毕业生？"},"headers":[],"relativePath":"read/jisuanjizhishiwanbei.md","filePath":"read/jisuanjizhishiwanbei.md","lastUpdated":1695020935000}'),t={name:"read/jisuanjizhishiwanbei.md"},r=e('<h1 id="怎样才算一个计算机知识体系完整的毕业生" tabindex="-1">怎样才算一个计算机知识体系完整的毕业生？ <a class="header-anchor" href="#怎样才算一个计算机知识体系完整的毕业生" aria-label="Permalink to &quot;怎样才算一个计算机知识体系完整的毕业生？&quot;">​</a></h1><h2 id="学习博客" tabindex="-1">学习博客 <a class="header-anchor" href="#学习博客" aria-label="Permalink to &quot;学习博客&quot;">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/MT2ithkc3y7Equ8-I2Sxkg" target="_blank" rel="noreferrer">怎样才算一个计算机知识体系完整的毕业生？</a></li></ul><h2 id="学习笔记" tabindex="-1">学习笔记 <a class="header-anchor" href="#学习笔记" aria-label="Permalink to &quot;学习笔记&quot;">​</a></h2><ul><li><strong>基础知识</strong>是指不管从事任何方向的软件工程师都应该掌握的，比如数据结构、算法、操作系统。 <ul><li>数学 <ul><li>算法（CV、NLP之类）、游戏引擎、信息安全编码等。这些方向对数学要求就会偏高，在计算机领域，线代、概率论、统计学这些数学分支相对比较重要，计算机本质上还是离散的。</li></ul></li><li>C语言 <ul><li>便于理解计算机系统。</li><li>任何比C语言更低级的语言，都不足以完整地抽象一个计算机系统；任何比C高级的语言，都可以用C来实现。</li><li>大部分是用的工具都是用c来编写的，例如linux，nginx，git等等。</li></ul></li><li>操作系统 <ul><li>写程序每时每刻都在和操作系统交互，没有理由不学好。</li></ul></li><li>编译原理</li><li>体系结构&amp;组成原理</li><li>数据结构与算法</li></ul></li><li><strong>特定领域知识</strong>就是你从事某个细分方向时需要掌握的知识，比如做游戏引擎的需要掌握图形学；做前端的需要掌握浏览器渲染原理、前端三大件；算法工程师需要更多的数学知识。</li><li><strong>框架和开发技能</strong></li></ul><p><strong>万丈高楼平地起，勿在浮沙筑高台。</strong></p>',6),n=[r];function s(o,h,u,c,_,d){return a(),l("div",null,n)}const f=i(t,[["render",s]]);export{m as __pageData,f as default};
