import{j as l,b as a,c as i,aa as e}from"./chunks/framework.Ct6KyvCt.js";const p=JSON.parse('{"title":"博客阅读","description":"","frontmatter":{"tag":["阅读","博客"]},"headers":[],"relativePath":"read/blog.md","filePath":"read/blog.md","lastUpdated":1711961771000}'),t={name:"read/blog.md"},r=e('<h1 id="博客阅读" tabindex="-1">博客阅读 <a class="header-anchor" href="#博客阅读" aria-label="Permalink to &quot;博客阅读&quot;">​</a></h1><h2 id="阮一峰周刊" tabindex="-1">阮一峰周刊 <a class="header-anchor" href="#阮一峰周刊" aria-label="Permalink to &quot;阮一峰周刊&quot;">​</a></h2><h3 id="视频学习胜过读书吗" tabindex="-1">视频学习胜过读书吗？ <a class="header-anchor" href="#视频学习胜过读书吗" aria-label="Permalink to &quot;视频学习胜过读书吗？&quot;">​</a></h3><ul><li>人类学习效率最高的方式，不是<strong>读书 + 思考</strong>，而是<strong>观察 + 模仿</strong>。前者需要较长时间的注意力投入，后者只需要很短时间注意力，更符合人类的天性。</li><li><strong>大部分领域的入门方式，都是观察和模仿，所以视频学习更有效。</strong> 对于深入学习，文字和书籍的效果可能要好于视频，因为入门以后再往上走，<strong>理解 + 思考</strong>的作用越来越大，<strong>观察 + 模仿</strong>的作用越来越小。但是，大多数人需要的只是入门，成为专业工作者毕竟是少数。</li><li>视频学习才是初学者更好的方式，或者说，视频是大众学习的主流，读书更适用于某个主题的进阶学习。</li></ul><h3 id="程序员需要担心裁员吗" tabindex="-1">程序员需要担心裁员吗？ <a class="header-anchor" href="#程序员需要担心裁员吗" aria-label="Permalink to &quot;程序员需要担心裁员吗？&quot;">​</a></h3><p>程序员不需要过分担心裁员的原因</p><ul><li>称职的程序员很难招聘</li><li>已经上线的系统需要维护。如果你参与线上系统，除非公司打算放弃该系统，否则不太会考虑解雇你。</li><li>你的经验，让你在市场上变的抢手。</li><li>很多公司不是真的要裁员，而是在调整雇员结构。</li><li>如果你不喜欢现在的工作，被解雇其实是一件好事，让你有机会去找一份让自己兴奋的新工作。</li></ul><p>为了预防万一，你可以做两方面的准备</p><ul><li>预留一些现金，至少能够应付三个月的支出。</li><li>强化一些方便求职的技能。</li></ul><p>不过，这两件事是平时就应该做到的，不管你会不会遇到裁员。</p><p><strong>与其担心宏观经济，不如关注自己。你对自己生活的影响，往往比宏观经济对你的影响大得多。</strong></p><h2 id="怎样才算一个计算机知识体系完整的毕业生" tabindex="-1">怎样才算一个计算机知识体系完整的毕业生？ <a class="header-anchor" href="#怎样才算一个计算机知识体系完整的毕业生" aria-label="Permalink to &quot;怎样才算一个计算机知识体系完整的毕业生？&quot;">​</a></h2><h3 id="学习博客" tabindex="-1">学习博客 <a class="header-anchor" href="#学习博客" aria-label="Permalink to &quot;学习博客&quot;">​</a></h3><ul><li><a href="https://mp.weixin.qq.com/s/MT2ithkc3y7Equ8-I2Sxkg" target="_blank" rel="noreferrer">怎样才算一个计算机知识体系完整的毕业生？</a></li></ul><h3 id="学习笔记" tabindex="-1">学习笔记 <a class="header-anchor" href="#学习笔记" aria-label="Permalink to &quot;学习笔记&quot;">​</a></h3><ul><li><strong>基础知识</strong>是指不管从事任何方向的软件工程师都应该掌握的，比如数据结构、算法、操作系统。 <ul><li>数学 <ul><li>算法（CV、NLP之类）、游戏引擎、信息安全编码等。这些方向对数学要求就会偏高，在计算机领域，线代、概率论、统计学这些数学分支相对比较重要，计算机本质上还是离散的。</li></ul></li><li>C语言 <ul><li>便于理解计算机系统。</li><li>任何比C语言更低级的语言，都不足以完整地抽象一个计算机系统；任何比C高级的语言，都可以用C来实现。</li><li>大部分是用的工具都是用c来编写的，例如linux，nginx，git等等。</li></ul></li><li>操作系统 <ul><li>写程序每时每刻都在和操作系统交互，没有理由不学好。</li></ul></li><li>编译原理</li><li>体系结构&amp;组成原理</li><li>数据结构与算法</li></ul></li><li><strong>特定领域知识</strong>就是你从事某个细分方向时需要掌握的知识，比如做游戏引擎的需要掌握图形学；做前端的需要掌握浏览器渲染原理、前端三大件；算法工程师需要更多的数学知识。</li><li><strong>框架和开发技能</strong></li></ul><p><strong>万丈高楼平地起，勿在浮沙筑高台。</strong></p><h2 id="how-to-escape-tutorial-hell-如何逃离教程地狱" tabindex="-1">How To Escape Tutorial Hell（如何逃离教程地狱） <a class="header-anchor" href="#how-to-escape-tutorial-hell-如何逃离教程地狱" aria-label="Permalink to &quot;How To Escape Tutorial Hell（如何逃离教程地狱）&quot;">​</a></h2><h3 id="博客地址" tabindex="-1">博客地址 <a class="header-anchor" href="#博客地址" aria-label="Permalink to &quot;博客地址&quot;">​</a></h3><ul><li><a href="https://marc.dev/blog/tutorial-hell" target="_blank" rel="noreferrer">How To Escape Tutorial Hell</a></li></ul><h3 id="什么是教程地狱" tabindex="-1">什么是教程地狱？ <a class="header-anchor" href="#什么是教程地狱" aria-label="Permalink to &quot;什么是教程地狱？&quot;">​</a></h3><ul><li>教程地狱是指某人（甚至不仅仅是开发人员）陷入看似无休止的循环，不断地浏览教程并且永远无法完成任何事情。</li></ul><h3 id="导致教程地狱的原因" tabindex="-1">导致教程地狱的原因？ <a class="header-anchor" href="#导致教程地狱的原因" aria-label="Permalink to &quot;导致教程地狱的原因？&quot;">​</a></h3><ul><li>要知道的东西太多了，新人感觉学什么都压力很大。</li><li>完成教程后，人们发现他们仍然无法真正构建一些东西。</li></ul><h3 id="如何逃脱教程地狱" tabindex="-1">如何逃脱教程地狱？ <a class="header-anchor" href="#如何逃脱教程地狱" aria-label="Permalink to &quot;如何逃脱教程地狱？&quot;">​</a></h3><ul><li>对于第一点的建议，不要试图一下子学会所有东西。</li><li>对于第二点的建议 <ul><li>看完教程之后，立即运用新知识完成一个小的工具或者项目。当你遇到困难时，回到教程并查找内容是完全可以的。这就是你学习的方式！</li><li>不需要记住所有的东西，只需要记住它的用途，以及在哪里可以找它的文档。</li><li>参与真正的问题解决，遇到问题自己无法解决可以在网络上寻求大佬的帮助。</li><li>将学习的技能与其他已知的技能相结合，有助于进一步巩固之前所掌握的技能。如果你不练习这些技能，它们就会消失。</li><li>写一份博客，记录新学习的东西。</li><li>与他人交流学习。</li><li>如果感觉课程没有交给你什么东西，更换其他教程。</li><li>休息一下，将会有更好的学习效率。</li><li>重复学习困难的，没有理解的部分。</li><li>学会总结。</li></ul></li></ul>',26),o=[r];function n(h,s,u,d,c,b){return a(),i("div",null,o)}const _=l(t,[["render",n]]);export{p as __pageData,_ as default};
