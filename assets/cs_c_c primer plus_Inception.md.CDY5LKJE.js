import{j as l,b as i,c as a,aa as e}from"./chunks/framework.Ct6KyvCt.js";const C=JSON.parse('{"title":"初始C语言","description":"","frontmatter":{"tag":["C语言"]},"headers":[],"relativePath":"cs/c/c primer plus/Inception.md","filePath":"cs/c/c primer plus/Inception.md","lastUpdated":1711962169000}'),t={name:"cs/c/c primer plus/Inception.md"},c=e('<h1 id="初始c语言" tabindex="-1">初始C语言 <a class="header-anchor" href="#初始c语言" aria-label="Permalink to &quot;初始C语言&quot;">​</a></h1><h2 id="选择c语言的理由" tabindex="-1">选择C语言的理由 <a class="header-anchor" href="#选择c语言的理由" aria-label="Permalink to &quot;选择C语言的理由&quot;">​</a></h2><ul><li>设计特性 <ul><li>C语言的设计理念让用户能轻松地完成自顶向下的规划、结构化编程和模块化设计</li></ul></li><li>高效性 <ul><li>C语言具有通常是汇编语言才具有的微调控制能力，可以根据具体情况微调程序以获得最大运行速度或最有效地使用内存。</li></ul></li><li>可移植性 <ul><li>稍作修改或者不修改就能在其他系统运行。</li></ul></li></ul><h2 id="c语言的应用范围" tabindex="-1">C语言的应用范围 <a class="header-anchor" href="#c语言的应用范围" aria-label="Permalink to &quot;C语言的应用范围&quot;">​</a></h2><ul><li>基本所有地方都能用到</li><li>C++在C语言的基础上嫁接了面向对象编程工具（面向对象编程是一门哲学，它通过对语言建模来适应问题，而不是对问题建模以适应语言）</li></ul><h2 id="c的精神" tabindex="-1">C的精神 <a class="header-anchor" href="#c的精神" aria-label="Permalink to &quot;C的精神&quot;">​</a></h2><ul><li>信任程序员;</li><li>不要妨碍程序员做需要做的事;</li><li>保持语言精炼简单;</li><li>只提供一种方法执行一项操作;</li><li>让程序运行更快，即使不能保证其可移植性</li></ul><p>在最后一点上，标准委员会的用意是：作为实现，应该针对目标计算机来定义最合适的某特定操作，而不是强加一个抽象、统一的定义。</p><h2 id="使用c语言的7个步骤" tabindex="-1">使用C语言的7个步骤 <a class="header-anchor" href="#使用c语言的7个步骤" aria-label="Permalink to &quot;使用C语言的7个步骤&quot;">​</a></h2><ol><li>定义程序的目标 <ul><li>在动手写程序之前，要在脑中有清晰的思路。想要程序去做什么首先自己要明确自己想做什么，思考你的程序需要哪些信息，要进行哪些计算和控制，以及程序应该要报告什么信息。</li></ul></li><li>设计程序</li><li>编写代码</li><li>编译</li><li>运行程序</li><li>测试和调试程序</li><li>维护和修改代码</li></ol><p>许多初学者经常忽略第1步和第2步（定义程序目标和设计程序），直接跳到第3步（编写代码）。刚开始学习时，编写的程序非常简单，完全可以在脑中构思好整个过程。即使写错了，也很容易发现。但是，随着编写的程序越来越庞大、越来越复杂，动脑不动手可不行，而且程序中隐藏的错误也越来越难找。最终，那些跳过前两个步骤的人往往浪费了更多的时间，因为他们写出的程序难看、缺乏条理、让人难以理解。要编写的程序越大越复杂，事先定义和设计程序环节的工作量就越大。</p><p><strong>磨刀不误砍柴工，应该养成先规划再动手编写代码的好习惯，用纸和笔记录下程序的目标和设计框架。这样在编写代码的过程中会更加得心应手、条理清晰。</strong></p>',12),r=[c];function o(n,s,u,h,d,p){return i(),a("div",null,r)}const m=l(t,[["render",o]]);export{C as __pageData,m as default};
